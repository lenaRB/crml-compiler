model CheckOver_no_ext is {
	// Decide
	// Option1
	// Operator [ Boolean ] 'decide' Boolean phi 'over' Period P = phi or (P end); //With or defined as the built-in disjunction operator
	// Option2
	Template b1 'or' b2 = not (not b1 and not b2);
	Operator [ Boolean ] 'decide' Boolean phi 'over' Period P = phi 'or' new Boolean (P end); //With 'or' as a user-defined disjunction operator for Booleans (only)

	// Evaluate
	Operator [ Boolean ] 'evaluate' Boolean phi 'over' Period P 
		= integrate (('decide' phi 'over' P) * phi) on P;

	// Check
	Operator [ Boolean ] 'check' Boolean phi 'over' Periods P 
		= and ('evaluate' phi 'over' P); // has to be expanded implicitly - make an issue
		
	// Example of function call
	Boolean phi1 is if (2.0 < time) and (time < 3.5) then undecided else false;
	Boolean b1 is if (2.5 < time) and (time < 5) then true else false;
	Periods P1 is {[new Event b1, new Event not b1]};
					
	Boolean b_check_over is 'check' phi1 'over' P1; //Value is undefined, becomes undecided at 2.5s and then false at t=3.5s
};